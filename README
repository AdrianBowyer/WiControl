WiControl
=========

Wireless Control with Panstamp and Raspberry Pi

The libserial-0.6.0rc1 directory contains a version of the C++ libserial
library configured for the Raspberry Pi.  The wput-0.6.1 directory contains
a version of wput - sort of the reverse of wget, but it is not hyper secure so 
don't use it for anything critical.

Installation:
-------------

On the Pi:

You may want to change the default name of the Pi ("raspberrypi") to something more appropriate like "heatingcontrol".  See here for instructions on how to do that:  http://www.howtogeek.com/167195/how-to-change-your-raspberry-pi-or-other-linux-devices-hostname/

Then:

$ sudo dpkg-reconfigure tzdata [Set your local timezone]
$ git clone https://github.com/AdrianBowyer/WiControl.git
$ cd WiControl/Pi-Control
$ make clean
$ make
$ cd ..
$ cp run-heat-control.sample run-heat-control

then edit run-heat-control to download your control file from your webserver and to 
run the program with that file.  Replace the ***** with your ftp password so that the 
temperatures can be uploaded to the server.  (Remember after that to keep the file
private - in particular don't push it to Github...)  Finally

$ sudo crontab -e

and add lines at the end like this:

* * * * * /home/pi/Panstamp/WiControl/run-heat-control
0 4   *   *   *    /sbin/shutdown -r +5

That will cause the shell script run-heat-control to be run once a minute, and cause a
system reboot at 04:05 in the morning to keep everything clean and tidy.  The sudo is
needed because shutdown needs root privilege.

When it runs it creates a status file called Status.

$ cat Status

will tell you what your system last did.  If you

$ touch Log

then each time run-heat-control runs it will append the status
report to the end of itself, which keeps a history and is therefore
useful for debugging.

When you have finished debugging don't forget to

$ rm Log

otherwise it will eventually fill up the SD/disc...


Adrian Bowyer

