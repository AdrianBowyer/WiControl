/*
 * Light.cpp
 *
 *  Created on: 13 Sep 2014
 *      Author: ensab
 */

#include "Control.h"

Light::Light()
{
	red = 0;
	green = 0;
	blue = 0;

}

void Light::Spin(unsigned long time)
{

}

void Light::Set(float r, float g, float b, float t)
{
	totalSteps = 0;

	int targetRed = (int)(r*255.0);
	int deltaR = targetRed - red;
	if(deltaR < 0)
	{
		plusRed = false;
		deltaR = -deltaR;
	} else
		plusRed = true;
	if(deltaR > totalSteps)
		totalSteps = deltaR;

	int targetGreen = (int)(g*255.0);
	int deltaG = targetGreen - green;
	if(deltaG < 0)
	{
		plusGreen = false;
		deltaG = -deltaG;
	} else
		plusGreen = true;
	if(deltaG > totalSteps)
		totalSteps = deltaG;

	int targetBlue = (int)(b*255.0);
	int deltaB = targetBlue - blue;
	if(deltaB < 0)
	{
		plusBlue = false;
		deltaB = -deltaB;
	} else
		plusBlue = true;
	if(deltaB > totalSteps)
		totalSteps = deltaB;

	if(totalSteps <= 0)
		return;

	  for(drive = 0; drive < DRIVES; drive++)
	  {
	    if(drive < AXES) // X, Y, & Z
	      delta[drive] = targetPosition[drive] - positionNow[drive];  // XYZ Absolute
	    else
	      delta[drive] = targetPosition[drive];  // Es Relative

	    d = myLookAheadEntry->MachineToEndPoint(drive, delta[drive]);
	    distance += d*d;

	    if(delta[drive] >= 0)
	      directions[drive] = FORWARDS;
	    else
	    {
	      directions[drive] = BACKWARDS;
	      delta[drive] = -delta[drive];
	    }

	    // Keep track of the biggest drive move in totalSteps

	    if(delta[drive] > totalSteps)
	    {
	      totalSteps = delta[drive];
	      bigDirection = drive;
	    }
	  }

	  // Not going anywhere?  Should have been chucked away before we got here.

	  if(totalSteps <= 0)
	  {
		if(reprap.Debug())
			platform->Message(HOST_MESSAGE, "DDA.Init(): Null movement.\n");
	    myLookAheadEntry->Release();
	    return result;
	  }

	  // Set up the DDA

	  counter[0] = -totalSteps/2;
	  for(drive = 1; drive < DRIVES; drive++)
	    counter[drive] = counter[0];



	switches[RED]->On(r, t);
	switches[GREEN]->On(g, t);
	switches[BLUE]->On(b, t);
}

